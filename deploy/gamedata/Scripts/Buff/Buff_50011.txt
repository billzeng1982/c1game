--[[
名称:天覆阵策士BUFF
类型:策士阵法buff
描述:每有一个策士存在，就有一个落雷
--]]

local ThisScriptId = 50011;

--Buff诞生处理
local function runBorn(LuaDataAgt)
    -- 加减属性
    -- 添加血量过滤处理
    --LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
    if not IsOnServer then
        local DamageTime = 1;
        LuaDataAgt:SetShareTimer(1, DamageTime); -- 公共CD f 秒 执行一次, 此时间用于标志是否执行警告或者伤害
        LuaDataAgt:SetShareValue(0, 0); -- 标志位 标志是否为警告 奇数为警告 偶数为伤害
    end
    
    -- 设置Buff公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_PASSIVESKILL, ThisScriptId, 0);

	print("FindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTarget111111111");
end


-- local function findTarget(LuaDataAgt)
    -- LuaDataAgt:ClearTarget();
    -- LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);
	-- print("FindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTarget");
-- end


--Buff驱散条件判断
 local function checkDeadCond(LuaDataAgt)
	
	return false;
end

--Buff驱散生效
local function runDead(LuaDataAgt)
end
	
 --Buff生效条件判断
local function checkEffectCond(LuaDataAgt)
	return true;
end	


local function takeEffect(LuaDataAgt)

    LuaDataAgt:ClearTarget();
    LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);
	print("FindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTargetFindTarget");
	
    local iTemp = LuaDataAgt:GetShareValue(0);
    if iTemp % 2 == 0 then
        -- 能被2整除, 表示预警, 需找目标
        local PassedTime = LuaDataAgt:GetShareTimer(1);
        if PassedTime > 0 then
            return
        end
        local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);
        LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
        LuaDataAgt:RemoveTroopInVisible(targetList);
        local randomValue = math.random(0, targetList.Count - 1);
        local vCurPosX;
        local vCurPosZ;
        if targetList.Count > 0 then
            local target = targetList:get_Item(randomValue);--找到任意一个敌方目标
            local RandomOffset = math.random(-15,15)
            vPos = target:GetCurPos();
            vCurPosX = vPos.x + RandomOffset;
            vCurPosX = math.min(vCurPosX,80)--不能转移到外面
            vCurPosX = math.max(vCurPosX,5)--不能转移到外面
            vCurPosZ = vPos.z + RandomOffset;
            vCurPosZ = math.min(vCurPosZ,80)
            vCurPosZ = math.max(vCurPosZ,5)
        else
            vCurPosX = math.random(0, 80);--场上没有地方 则随机劈一个人
            vCurPosZ = math.random(0, 80);
        end
        LuaDataAgt:SetShareValue(1, vCurPosX);
        LuaDataAgt:SetShareValue(2, vCurPosZ);
        local vTargetPos = Vector3(vCurPosX, 0.0, vCurPosZ);
        LuaDataAgt:PlayFX("Prefabs/RandomElementEffect/Buff_zhanchang_LeiJi_Begin", LuaDataAgt, vTargetPos, vTargetPos, 0, true);--播预警特效
        LuaDataAgt:SetShareValue(0, iTemp + 1);
        local WarningTime = 3;
        LuaDataAgt:SetShareTimer(1, WarningTime); --预警时间
    else
        -- 不能被2整除, 表示造成伤害
        local PassedTime = LuaDataAgt:GetShareTimer(1);
        if PassedTime > 0 then
            return
        end
        local PrePosX = LuaDataAgt:GetShareValue(1);
        local PrePosZ = LuaDataAgt:GetShareValue(2);
        LuaDataAgt:ClearTarget();
        local targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.CIRCLE, PrePosX, PrePosZ, 10, 1);
        local vTargetPos = Vector3(PrePosX, 0.0, PrePosZ);
        LuaDataAgt:PlayFX("Prefabs/RandomElementEffect/Buff_zhanchang_LeiJi_End", LuaDataAgt, vTargetPos, vTargetPos, 0, true);
        for k = 0, targetList.Count - 1 do
            local target = targetList:get_Item(k);
            local MaxHp= target:GetHp(VALUE_TYPE.ORIGIN_CONF);
			--伤害值
            local Ratio = LuaDataAgt:GetResTacticsBuffValue(ThisScriptId);
            local Damge = MaxHp * Ratio
			--最大伤害保护
			local MaxDamge = LuaDataAgt:GetWitAtk(VALUE_TYPE.CURRENT);
			MaxDamge = 5 * MaxDamge; -- 最高自身物攻5倍伤害
			--local SourceHp = Source: GetHp(VALUE_TYPE.RUNTIME_CONF)*0.2;
			--print("SourceHp="..SourceHp);
			Damge = math.min(Damge,MaxDamge); --保护，以免反伤值过大
			
            print("Ratio = "..Ratio);
            target:ChgHp(VALUE_TYPE.CURRENT, Damge, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_PASSIVESKILL, ThisScriptId, 0);
        end
        LuaDataAgt:SetShareValue(0, iTemp + 1);
        local DamageTime = 1;
        LuaDataAgt:SetShareTimer(1, DamageTime); --重置时间
    end
end

local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)

    iRet = iDamageRef;
    
    return -iRet;
end




Buff_50011 = {
    func_runBorn = runBorn;
    func_checkDeadCond = checkDeadCond;
	func_runDead = runDead;
	func_checkEffectCond = checkEffectCond;
    --func_findTarget = findTarget;
    func_takeEffect = takeEffect;
    func_doFormula = doFormula;

--func_doFilter = doFilter;
}
