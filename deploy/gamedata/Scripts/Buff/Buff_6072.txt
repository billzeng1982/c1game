--[[
名称：麻沸散
类型：被动buff
描述：出场提升盾枪骑部队的生命值和受治疗量
--]]
local ThisScriptId = 6072;

--Buff诞生处理
local function runBorn(LuaDataAgt)
	-- 添加血量过滤处理
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
	
	--LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_BUFF, ThisScriptId, 1);
end

--Buff驱散条件判断
local function checkDeadCond(LuaDataAgt)
	
	
	return false;
end

--Buff驱散生效
local function runDead(LuaDataAgt)
	--属性加减回退
	--
end

--Buff生效条件判断
local function checkEffectCond(LuaDataAgt)
	return true;
end

--Buff生效
local function takeEffect(LuaDataAgt)
	local ArmyType = LuaDataAgt:GetArmyType();
	if ArmyType == ARMY_TYPE.ARMY_CAVALRY or ArmyType == ARMY_TYPE.ARMY_SPEARMAN or ArmyType == ARMY_TYPE.ARMY_SHIELDMAN then
		local rSource = LuaDataAgt:GetBuffSource();
		local MaxhpRatio = rSource:GetPassiveSkillBaseValue(ThisScriptId, 1) / 100;
		local maxHp = LuaDataAgt:GetHp(VALUE_TYPE.RUNTIME_CONF);
		local addmaxhp = maxHp * MaxhpRatio;
		
		LuaDataAgt:ChgHp(VALUE_TYPE.RUNTIME_CONF, addmaxhp, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_COMM, 6072, 0);
		LuaDataAgt:ChgHp(VALUE_TYPE.CURRENT, addmaxhp, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_COMM, 6072, 0);
	end
	
end

--Buff过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	
	if iFilterType == FILTER_TYPE.HP then
		local iHp = FilterValue.m_fFoo1;
		if iHp > 0 then
			local ArmyType = LuaDataAgt:GetArmyType();
			if ArmyType == ARMY_TYPE.ARMY_CAVALRY or 
				ArmyType == ARMY_TYPE.ARMY_SPEARMAN or 
				ArmyType == ARMY_TYPE.ARMY_SHIELDMAN then
				
				local rSource = LuaDataAgt:GetBuffSource();
				local healincratio = rSource:GetPassiveSkillBaseValue(ThisScriptId, 2) / 100;
				
				FilterValue.m_fFoo1 = iHp * (1 + healincratio);
			end
		end
	end
	
	return FilterValue;
end

--Buff公式处理
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local MaxhpRatio = rSource:GetPassiveSkillBaseValue(ThisScriptId, 1) / 100;
	
	local maxHp = LuaDataAgt:GetHp(VALUE_TYPE.RUNTIME_CONF);
	local addmaxhp = maxHp * MaxhpRatio;
	
	iRet = addmaxhp;
	return -iRet;
end

Buff_6072 = {
	func_runBorn = runBorn;
	func_checkDeadCond = checkDeadCond;
	func_runDead = runDead;
	func_checkEffectCond = checkEffectCond;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
	func_doFormula = doFormula;
}