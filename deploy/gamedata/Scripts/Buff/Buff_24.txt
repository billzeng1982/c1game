--[[
名称：挑战之吼	
类型：武将技能Buff
描述：嘲讽，加攻
--]]
local ThisScriptId = 24;

--Buff诞生处理
local function runBorn(LuaDataAgt)
	local source = LuaDataAgt:GetBuffSource();
	
	local itime = source:GetActiveSkillBaseValue(3);
	if source:IsHaveActiveSkillCheats(2) then     --秘籍2：增加时长
	    itime = itime * 1.1;
	end
	
	LuaDataAgt:SetBuffLifeTime(VALUE_TYPE.RUNTIME_CONF, itime);
	
	if not IsOnServer then
		LuaDataAgt:RefreshFightNum();
	end
	
	--设置过滤器
	LuaDataAgt:SetFilter(FILTER_TYPE.POS, TARGET_GROUP.NONE, 0);
	
	-- 添加血量过滤处理
	--LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
	
	-- 设置公式
	--LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_BUFF, ThisScriptId, 0);
end

--Buff驱散条件判断
local function checkDeadCond(LuaDataAgt)
	
	return false;
end

--Buff驱散生效
local function runDead(LuaDataAgt)
	
end

--Buff生效条件判断
local function checkEffectCond(LuaDataAgt)
	return true;
end

--Buff生效
local function takeEffect(LuaDataAgt)
	--[[
	--定时跟踪施法者
	local buffSource = LuaDataAgt:GetBuffSource();
	local IsDead = buffSource:IsDead();
	local IsRetreat = buffSource:IsRetreat();
	if not IsDead and  not IsRetreat then
		local pos = buffSource:GetCurPos();
		LuaDataAgt:MoveToDest(pos, false);
	end
	--]]
end

--Buff过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	
	if iFilterType == FILTER_TYPE.POS then
		-- 使用索敌系统来做嘲讽
		local buffSource = LuaDataAgt:GetBuffSource();
		
		if FilterValue.m_iValueChgPara == 1 then
			-- 跟踪系统，判断是不是相应目标
			if not LuaDataAgt:IsLockAttackTarget(buffSource) then
				-- 强制跟踪目标
				LuaDataAgt:LockAttackTarget(buffSource);
				-- 这次移动不生效
				FilterValue.m_iValueChgPara = 999;
			end
		else
			-- 非跟踪系统
			-- 强制跟踪目标
			LuaDataAgt:LockAttackTarget(buffSource);
			-- 这次移动不生效
			FilterValue.m_iValueChgPara = 999;
		end
	end
	
	--[[
	if iFilterType == FILTER_TYPE.HP then
		if not IsOnServer and not IsSource then
			if (FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_NORMAL or 
				FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_SHOOT) then
				local iHp = FilterValue.m_fFoo1;
				if  iHp < 0 then
					-- 返回伤害给攻击来源
					local source = FilterValue:GetSource();
					local iHp = FilterValue.m_fFoo1;
					source:ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_BUFF, ThisScriptId, 0);
				end
			end
		end
	end
	-]]
	
	return FilterValue;
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local source = LuaDataAgt:GetBuffSource();
	local strAtk = source:GetStrAtk(VALUE_TYPE.CURRENT);
	local Ratio = source:GetActiveSkillBaseValue(1);
	local iRet = -strAtk * Ratio;
	return iRet;
end

Buff_24 = {
	func_runBorn = runBorn;
	func_checkDeadCond = checkDeadCond;
	func_runDead = runDead;
	func_checkEffectCond = checkEffectCond;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
	func_doFormula = doFormula;
}