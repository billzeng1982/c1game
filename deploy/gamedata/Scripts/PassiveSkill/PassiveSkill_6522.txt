--[[
名称：许褚被动4
类型：被动技能
描述：给所有友方加物防，杀人加生命上限
--]]
local ThisScriptId = 6522;

--技能诞生处理
local function runBorn(LuaDataAgt)
	print("RunBorn PassiveSkill Id = "..ThisScriptId);
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, -5);
	--血量叠加上限次数
	LuaDataAgt:SetShareValue(1,0);
end

--技能条件判断
local function checkCond(LuaDataAgt)
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	if IsOnServer then
		LuaDataAgt:SetSkillEnable(false);
		return;
	end
	
	LuaDataAgt:ClearTarget();
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.SELF);
	
	local ChgRatio = LuaDataAgt:GetPassiveSkillBaseValue(ThisScriptId,1)/100;
	for i = 0,targetList.Count - 1 do
		local Chgvalue = targetList:get_Item(i):GetStrDef(VALUE_TYPE.RUNTIME_CONF);
		Chgvalue = Chgvalue * ChgRatio; 
		targetList:get_Item(i):ChgStrDef(VALUE_TYPE.CURRENT,Chgvalue);
	end
	--[[
	LuaDataAgt:ClearTarget();
	local targetList2 = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);
	print("enemy num =="..targetList2.Count);
	for j = 0,targetList2.Count - 1 do
		--targetList2:get_Item(j):AddBuff(6522, LuaDataAgt, nil);
	end
	]]
	LuaDataAgt:SetSkillEnable(false);
end

--Skill过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	local LHP = LuaDataAgt:GetHp(VALUE_TYPE.CURRENT);

	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	
	--取已经叠加的次数
	local Count = LuaDataAgt:GetShareValue(1);
	print("LuaDataAgt Count =="..Count);
	
	--最多叠加4次
	if iFilterType == FILTER_TYPE.HP and Count < 4 then

		local iHp = FilterValue.m_fFoo1;
		if iHp < 0 and IsSource and not IsOnServer then

			local target = FilterValue:GetTarget();
			local nowHp = target:GetHp(VALUE_TYPE.CURRENT);
			nowHp = nowHp + iHp;
			if nowHp < 0  then

				local MaxHpRatio = LuaDataAgt:GetPassiveSkillBaseValue(6522,2)/100;
				local MaxHpAdd = LuaDataAgt:GetPassiveSkillBaseValue(6522,3);
				local FinalAddMaxHp = math.floor(LuaDataAgt:GetHp(VALUE_TYPE.RUNTIME_CONF) * MaxHpRatio + MaxHpAdd);
				LuaDataAgt:ChgHp(VALUE_TYPE.RUNTIME_CONF,FinalAddMaxHp,LuaDataAgt,VALUE_CHG_TYPE.CHG_HP_COMM, 0, 0);
				LuaDataAgt:ChgHp(VALUE_TYPE.CURRENT,FinalAddMaxHp,LuaDataAgt,VALUE_CHG_TYPE.CHG_HP_COMM, 0, 0);
				--叠一次+1
				Count = Count + 1;
				LuaDataAgt:SetShareValue(1,Count);
			end
		end
	end
	
	return FilterValue;
end


PassiveSkill_6522 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
}
