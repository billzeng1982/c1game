--[[
名称：雷霆之怒
类型：被动技能
描述：受到伤害提高自身免伤，受到射击，免伤翻倍
--]]
local ThisScriptId = 6212; 

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 加减属性
	-- 添加血量过滤处理
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, -2);
	--LuaDataAgt:SetFilter(FILTER_TYPE.TRIG, TARGET_GROUP.NONE, 0);
	--LuaDataAgt:SetShareValue(0, 0);
	print("RunBorn PassiveSkill Id = "..ThisScriptId);
	local iTime = LuaDataAgt:GetPassiveSkillBaseValue(6212,2);
	LuaDataAgt:SetBuffLifeTime(VALUE_TYPE.RUNTIME_CONF, iTime);
	LuaDataAgt:SetShareTimer(1,0);
end

--技能条件判断
local function checkCond(LuaDataAgt)
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	if IsOnServer then
		LuaDataAgt:SetSkillEnable(false);
		return;
	end
	
	-- 被动技能一场比赛只生效一次
	LuaDataAgt:SetSkillEnable(false);
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	
end

--技能过滤
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	local nowCD = LuaDataAgt:GetShareTimer(1);
	if nowCD < 0 then
		if iFilterType == FILTER_TYPE.HP and not IsSource and not IsOnServer then
			local DamageSource = FilterValue:GetSource();
			local ArmyType = DamageSource:GetArmyType();
			if ArmyType == ARMY_TYPE.ARMY_ARCHER then
				LuaDataAgt:AddBuff(6212,LuaDataAgt,nil); --双倍减伤
			else
				LuaDataAgt:AddBuff(6210,LuaDataAgt,nil);
			end
			local iCD = LuaDataAgt:GetPassiveSkillBaseValue(6212,3);
			LuaDataAgt:SetShareTimer(1,iCD);
		end
	end
	--[[
	if iFilterType == FILTER_TYPE.TRIG and FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_TRIG_GENERALSKILL_END then
		if IsSource and not IsOnServer then
			local shareValue = LuaDataAgt:GetShareValue(0);
			local bufflevel = shareValue + 1 ;
			if bufflevel > 3 then
				bufflevel = 3 ;
			end
			LuaDataAgt:SetShareValue(0, bufflevel);	-- 共享值用于判断是否首次
		end
	end
	]]
	return FilterValue;
end

--这个ID要和脚本ID保持一致
PassiveSkill_6212 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFormula = doFormula;
	func_doFilter = doFilter;
}