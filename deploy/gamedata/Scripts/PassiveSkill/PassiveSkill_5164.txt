--[[
名称：连战连捷
类型：被动技能
描述：每击杀一个对手，或攻城成功一次，回复15%生命
--]]
local ThisScriptId = 5164;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 添加血量过滤处理
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_PASSIVESKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt)
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	if IsOnServer then
		LuaDataAgt:SetSkillEnable(false);
		return;
	end
	
	-- 一场战斗中只生效一次
	LuaDataAgt:SetSkillEnable(false);
	
end

--Skill过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	
	if iFilterType == FILTER_TYPE.HP then
		local iHp = FilterValue.m_fFoo1;
		if IsOnServer or not IsSource or iHp > 0 then
			return FilterValue;
		end
		
		if (FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_CITYWALL or 
			FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_CITYGATE) then
			LuaDataAgt:ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_PASSIVESKILL, ThisScriptId, 0);
		else
			if (FilterValue.m_iValueChgType ~= VALUE_CHG_TYPE.CHG_HP_ATK_TOWER and 
				FilterValue.m_iValueChgType ~= VALUE_CHG_TYPE.CHG_HP_ATK_BARRIER) then
				local target = FilterValue:GetTarget();
				local targetCurHp = target:GetHp(VALUE_TYPE.CURRENT);
				if targetCurHp + iHp <= 0 then
					LuaDataAgt:ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_PASSIVESKILL, ThisScriptId, 0);
				end
			end
		end	
	end
	
	return FilterValue;
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local hp = rTarget:GetHp(VALUE_TYPE.RUNTIME_CONF);
	-- 造成伤害为负值
	local iRet = hp * 0.15;
	return iRet;
end

PassiveSkill_5164 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
	func_doFormula = doFormula;
}
