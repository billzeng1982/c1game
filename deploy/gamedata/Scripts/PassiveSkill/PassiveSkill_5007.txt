--[[
名称：减速
类型：被动技能
描述：方士每次普攻和技能均使敌人减速
--]]
local ThisScriptId = 5007;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 添加血量过滤处理
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
	if not IsOnServer then
		LuaDataAgt:SetShareTimer(0, 0);
	end
	
end

--技能条件判断
local function checkCond(LuaDataAgt)
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	if IsOnServer then
		LuaDataAgt:SetSkillEnable(false);
		return;
	end
	
	-- 一场战斗中只生效一次
	LuaDataAgt:SetSkillEnable(false);
	
end

--Skill过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	if iFilterType == FILTER_TYPE.HP then
		if IsSource and not IsOnServer then
			if (FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_NORMAL  
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_COND_GENERALSKILL
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_TRIG_BUFF_ADD_END
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_SHOOT) then
				local shareTimer = LuaDataAgt:GetShareTimer(0);
				if shareTimer < 0 then
					local target = FilterValue:GetTarget();
					target:AddBuff(9005, LuaDataAgt, nil);
					LuaDataAgt:SetShareTimer(0, 2);
				end
			end
		end		
	end
	
	if  iFilterType == FILTER_TYPE.TRIG then
		if IsSource and not IsOnServer then
			if (FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_NORMAL  
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_COND_GENERALSKILL
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_TRIG_BUFF_ADD_END
			 or FilterValue.m_iValueChgType == VALUE_CHG_TYPE.CHG_HP_ATK_SHOOT) then
				local shareTimer = LuaDataAgt:GetShareTimer(0);
				if shareTimer < 0 then
					local target = FilterValue:GetTarget();
					target:AddBuff(9005, LuaDataAgt, nil);
					LuaDataAgt:SetShareTimer(0, 2);
				end
			end
		end		
	end
	
	return FilterValue;
end

PassiveSkill_5007 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
}
