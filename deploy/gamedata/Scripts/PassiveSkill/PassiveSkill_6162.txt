--[[
名称：噬血反骨
类型：被动技能
描述：敌方对魏延造成伤害时，按一定比例反伤敌方
--]]
local ThisScriptId = 6162;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 添加血量过滤处理
	LuaDataAgt:SetFilter(FILTER_TYPE.HP, TARGET_GROUP.NONE, 0);
	
	print("RunBorn PassiveSkill Id = "..ThisScriptId);
end

--技能条件判断
local function checkCond(LuaDataAgt)
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	if IsOnServer then
		LuaDataAgt:SetSkillEnable(false);
		return;
	end
	
	-- 一场战斗中只生效一次
	LuaDataAgt:SetSkillEnable(false);
end

--Skill过滤处理
local function doFilter(LuaDataAgt, iFilterType, rFilterOwner, FilterValue)
	-- Filter所有者是否是发起对象
	local IsSource = rFilterOwner:Equal(FilterValue:GetSource());
	
			
	if iFilterType == FILTER_TYPE.HP then
		local iHp = FilterValue.m_fFoo1;
		if  iHp < 0 and not IsSource and not IsOnServer then
			local Ratio = LuaDataAgt: GetPassiveSkillBaseValue(ThisScriptId, 1) / 100;
			local iHpback = iHp * Ratio;
			
			local Source = FilterValue:GetSource();
			Source:ChgHp(VALUE_TYPE.CURRENT, iHpback, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_COMM, 0, 0);
		end
	end
	
	return FilterValue;
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local SuckBloodRatio = LuaDataAgt: GetPassiveSkillBaseValue(ThisScriptId, 1) / 100;

	iRet = LuaDataAgt:GetHp(VALUE_TYPE.RUNTIME_CONF) * SuckBloodRatio;
	return iRet
end

PassiveSkill_6162 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFilter = doFilter;
	func_doFormula = doFormula;
}
