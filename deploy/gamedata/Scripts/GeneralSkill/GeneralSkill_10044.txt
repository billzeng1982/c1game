--[[
名称：殇之决策
类型：主动技能
描述：贾诩以毒计直击敌军要害，对敌方法术攻击最低的敌军造成巨大伤害。
--]]
local ThisScriptId = 10044;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--没有技能框 清除其它技能框
	LuaDataAgt:ClearSkillRange();
	
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	--找敌方部队
	local targetList;
	targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 30, 15, 60);  --- 15 = （20 + 部队大小）/ 2
	LuaDataAgt:MapDrawRectangle(0,15,160,0,0);
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
		 
	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);
	
	--目标是对面距离最近的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.DISTANCE);
	
	--小地图技能目标提示标志
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);
	
	--当前位置判定
	local pos = LuaDataAgt:GetCurPos();
	if pos.z < 10 or pos.z > 70 then 
	    return false;
	end
	
	--出城时间判定，出城后3秒内不允许放技能
	local passedTime = LuaDataAgt:GetOutCitySuccessTimePassed();
	if passedTime < 3 then
	    return false;
	end
	
	if targetList.Count < 1 then
		return false;
	end
	
	return true;
 end
 
 --找对象，上面条件满足后执行
 local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	--找敌方部队
	local targetList;
	targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 30, 15, 60);  --- 15 = （20 + 部队大小）/ 2
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
		 
	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);
	
	--目标是对面距离最近的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.DISTANCE);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);
	
	if targetList.Count > 0 then
		targetList:get_Item(0):ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt,VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
	end
	
	LuaDataAgt:InterruptSiege();
end	

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = 0;
	
	local WitAtk = rSource:GetWitAtk(VALUE_TYPE.CURRENT);
	local WitDef = rTarget:GetWitDef(VALUE_TYPE.CURRENT);
	local Base = rSource:GetActiveSkillAdditionValue(2);
	local MinDmg = Base;
	local Ratio = rSource:GetActiveSkillAdditionValue(3);
	iRet = Base + (WitAtk - WitDef) * Ratio;
	iRet = math.max(iRet,MinDmg);
	print ("Damege="..iRet);
	return -iRet;
end

GeneralSkill_10044 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	
	func_doFormula = doFormula;
}
	