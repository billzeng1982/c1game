--[[
名称：奇门遁甲
类型：主动技能
描述：持续伤害和禁锢
--]]
local ThisScriptId = 2017;

--技能诞生处理
local function runBorn(LuaDataAgt)

	-- 设置技能公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
	--LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_SKILLCHEATS, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--没有技能框 清除其它技能框
	LuaDataAgt:ClearSkillRange();
	LuaDataAgt:ClearAllSkillTarget();

	--找之前先清一次
	LuaDataAgt:ClearTarget();
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);

	--AI操作需要至少命中n人，玩家操作无要求
	if (AIId == 0) then

	else
		if targetList.Count > 0 then
			return true;
		else
			return false;
		end
	end
	 return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	--设置技能目标为敌方全军
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
end


--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);

	for i = 0,targetList.Count-1 do
		local target = targetList:get_Item(i);
		target:ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
		target:AddBuff(ThisScriptId, LuaDataAgt, nil);
	end
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	
	local iRet = iDamageRef;
	--直接伤害
	if iDamageRef == 0 then
		local WitAtk = rSource:GetWitAtk(VALUE_TYPE.CURRENT);
		local WitDef = rTarget:GetWitDef(VALUE_TYPE.CURRENT);
		local Base = rSource:GetActiveSkillBaseValue(1);
		local MinDmg = Base;
		local Ratio = rSource:GetActiveSkillRateValue(1);

		iRet = Base + (WitAtk - WitDef) * Ratio;
		iRet = math.max(iRet,MinDmg);
	--dot伤害
	else
		local WitAtk = rSource:GetWitAtk(VALUE_TYPE.CURRENT);
		local WitDef = rTarget:GetWitDef(VALUE_TYPE.CURRENT);
		local Base = rSource:GetActiveSkillBaseValue(2);
		local MinDmg = 0.2 * Base;
		local Ratio = rSource:GetActiveSkillRateValue(2);
		
		iRet = Base + (WitAtk - WitDef) * Ratio;
		iRet = math.max(iRet,MinDmg);
	end
	return -iRet;
	
end

GeneralSkill_2017 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	func_doFormula = doFormula;
}