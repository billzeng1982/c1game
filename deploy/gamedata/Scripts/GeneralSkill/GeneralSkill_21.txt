--[[
名称：霸王雷破
类型：主动技能
描述：孙策以破军之势重创前方敌军，对前方敌军造成禁锢，自身加速。
--]]
local ThisScriptId = 21;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	local targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 16, 12, 60);
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);
	
	LuaDataAgt:MapDrawRectangle(0,12,85,0,0);
	
	--小地图技能目标提示标志
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);
	
	--AI操作需要至少命中n人，玩家操作无要求
	if (AIId == 0) then
		
	else
		if targetList.Count > 0 then
			return true;
		else
			return false;
		end
	end
	
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	local targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 16, 12, 60);
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);
	
	for i=0,targetList.Count-1 do
		local target = targetList:get_Item(i);
		target:ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt,VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
		
		target:AddBuff(21, LuaDataAgt, nil);
		local TarPos = target:GetCurPos();
		target:PlayFX("Prefabs/BasicEffect/3D_CharEff_JingGu", target, TarPos, TarPos, 0, true); -- 延迟0播该特效
	end
	LuaDataAgt:AddBuff(2021,LuaDataAgt,nil);
	
	local TarPos = LuaDataAgt:GetCurPos();
	LuaDataAgt:PlayFX("Prefabs/BasicEffect/3D_CharEff_JiaSu", LuaDataAgt, TarPos, TarPos, 0, true); -- 延迟0播该特效
	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = iDamageRef;
	
	local StrAtk = rSource:GetStrAtk(VALUE_TYPE.CURRENT);
	local StrDef = rTarget:GetStrDef(VALUE_TYPE.CURRENT);
	local Base = rSource:GetActiveSkillBaseValue(1);
	local MinDmg = Base;
	local Ratio = rSource:GetActiveSkillRateValue(1);
	iRet = Base + (StrAtk - StrDef) * Ratio;
	iRet = math.max(iRet,MinDmg);
	return -iRet;
end



GeneralSkill_21 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	func_doFormula = doFormula;

}