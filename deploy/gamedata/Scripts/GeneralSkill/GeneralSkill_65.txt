--[[
名称：追命猎矢
类型：主动技能
描述：张任拉动强弓对最脆弱的敌军进行射击，造成少量伤害，如果敌军生命较低则造成大量伤害。
--]]
local ThisScriptId = 65;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--没有技能框 清除其它技能框
	LuaDataAgt:ClearSkillRange();

	LuaDataAgt:ClearTarget();
	--找敌方部队
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);

	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);

	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);

	--目标是对面血最少的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.HP);

	--小地图技能目标提示标志
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);

	if targetList.Count > 0 then
		return true;
	end

	LuaDataAgt:SetSkillPrompt(5);
	return false;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	--找敌方部队
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);

	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);

	--目标是对面血最少的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.HP);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);

	if targetList.Count > 0 then
		targetList:get_Item(0):ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
	end

	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = 0;
	
	local StrAtk = rSource:GetStrAtk(VALUE_TYPE.CURRENT);
	local StrDef = rTarget:GetStrDef(VALUE_TYPE.CURRENT);
	local Base = rSource:GetActiveSkillAdditionValue(2);
	local MinDmg = Base;
	local Ratio = rSource:GetActiveSkillAdditionValue(3);
	iRet = Base + (StrAtk - StrDef) * Ratio;
	iRet = math.max(iRet,MinDmg);

	-- 低血量加倍
	local percent = 0;
	local hp = rTarget:GetHp(VALUE_TYPE.CURRENT);
	local hpTotal = rTarget:GetHp(VALUE_TYPE.RUNTIME_CONF);
	if hp / hpTotal < percent / 100 then
		iRet = iRet * 2;
	end
	
	return -iRet;
end

GeneralSkill_65 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;

	func_doFormula = doFormula;
}