--[[
名称：火烧连营
类型：主动技能
描述：陆逊火烧连营，对一片区域内造成每秒伤害，对城墙造成每秒伤害，持续10秒

--]]
local ThisScriptId = 2071;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
	local itime = LuaDataAgt:GetActiveSkillAdditionValue(3);
	if LuaDataAgt:IsHaveActiveSkillCheats(2) then    --秘籍2：时间增长
	    itime = itime * 1.1;
	end
	LuaDataAgt:SetShareValue(0, itime);		--持续时间
	LuaDataAgt:SetShareValue(1, 1);			--生效CD
	LuaDataAgt:SetShareValue(2, 0);			--延迟
	LuaDataAgt:SetShareValue(3, 2071);		--减速buff
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	LuaDataAgt:ClearAllSkillTarget();
	LuaDataAgt:ClearTarget();
	
	local targetList;
	if LuaDataAgt:IsHaveActiveSkillCheats(1) then    --秘籍1：范围扩大
		targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.CIRCLE, 0, 24*1.05, 25*1.05, 0);
		LuaDataAgt:MapDrawCircle(24*1.05,25*1.05);
	else
		targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.CIRCLE, 0, 24, 25, 0);
		LuaDataAgt:MapDrawCircle(24,25);
	end
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);
	
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);
	
	--AI操作需要至少命中n人，玩家操作无要求
	if (AIId == 0) then
		
	else
		if targetList.Count > 0 then
			return true;
		else
			return false;
		end
	end
	
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	
	LuaDataAgt:FindTarget(TARGET_GROUP.NONE);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)

	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	
	if iDamageRef == 1 then
		local iRet = 0;
		local iTargetDef = rTarget:GetWitDef(VALUE_TYPE.CURRENT);
		local iSourceAP = rSource:GetWitAtk(VALUE_TYPE.CURRENT);	--人
		local Base = rSource:GetActiveSkillBaseValue(1);
		local MinDmg = Base;
	    local Ratio = rSource:GetActiveSkillRateValue(1);
	    iRet = (Base + (iSourceAP - iTargetDef) * Ratio);
	    iRet = math.max(iRet,MinDmg);
		iRet = -iRet;
		
		return iRet;
	else
		local iRet = 0;
		local iTargetDef = rTarget:GetWitDef(VALUE_TYPE.CURRENT);
		local iSourceAP = rSource:GetWitAtk(VALUE_TYPE.CURRENT);	--墙
		local Base = rSource:GetActiveSkillAdditionValue(2);
		iRet = -Base;
		
		return iRet;
	end
end

GeneralSkill_2071 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	func_doFormula = doFormula;
}