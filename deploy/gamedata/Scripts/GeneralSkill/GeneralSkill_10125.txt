--[[
名称：霸王雷破
类型：主动技能
描述：孙策以破军之势重创前方敌军，对前方敌军造成减速和易伤。
--]]
local ThisScriptId = 10125;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)

	--出城时间判定，出城后5秒内不允许放技能
	local passedTime = LuaDataAgt:GetOutCitySuccessTimePassed();
	if passedTime < 5 then
	    return false;
	end
	
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	
	local targetList;
	targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 16, 12, 32);
	LuaDataAgt:MapDrawRectangle(0,12,70,0,0);
	--小地图技能目标提示标志
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);
	
	-- 剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
	-- 如果目标少于1，不放技能
	if targetList.Count < 1 then
	    return false;
	end
	
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	local targetList;
	
	targetList = LuaDataAgt:FindTargetEx(TARGET_GROUP.ENEMY, SHAPE_TYPE.RECT, 0, 16, 12, 32);
	
	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);
	
	for i=0,targetList.Count-1 do
		targetList:get_Item(i):ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt,VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
		targetList:get_Item(i):AddBuff(ThisScriptId, LuaDataAgt, nil);
	end

	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = 0;
	local StrAtk = rSource:GetStrAtk(VALUE_TYPE.CURRENT);
	local StrDef = rTarget:GetStrDef(VALUE_TYPE.CURRENT);
	local Base = rSource:GetActiveSkillBaseValue(1);
	local MinDmg = Base;
	local Ratio = rSource:GetActiveSkillRateValue(1);
	iRet = Base + (StrAtk - StrDef) * Ratio;
	iRet = math.max(iRet,MinDmg);
	print ("Damege 1="..iRet);
	return -iRet;
end

GeneralSkill_10125 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	func_doFormula = doFormula;
}