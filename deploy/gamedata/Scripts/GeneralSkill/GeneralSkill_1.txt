--[[
名称：一箭穿云
类型：主动技能
描述：找到离自己最近的部队 造成伤害并添加buff_1
--]]
local ThisScriptId = 1;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);

	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);

	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);

	--目标是对面血最少的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.HP);

	--小地图技能目标提示标志
	LuaDataAgt:SetMapSkillTarget(TARGET_GROUP.ENEMY);

	--AI操作需要至少有一个血量低于50%的目标，玩家操作无要求
	if (AIId == 0) then

	else
		if targetList.Count > 0 then
			local target = targetList:get_Item(0);
			local maxHp = target:GetHp(VALUE_TYPE.RUNTIME_CONF);
			local curHp = target:GetHp(VALUE_TYPE.CURRENT);
			if curHp / maxHp < 0.5 then
				return true;
			else
				return false;
			end
		else
			return false;
		end
	end

	if targetList.Count > 0 then
		return true;
	end

	LuaDataAgt:SetSkillPrompt(5);
	return false;

end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();

	local targetList;

	targetList = LuaDataAgt:FindTarget(TARGET_GROUP.ENEMY);

	--剔除死亡或回城部队，targetList也会随之改变
	LuaDataAgt:RemoveTroopDeadOrRetreat(targetList);

	-- 剔除不可见部队
	LuaDataAgt:RemoveTroopInVisible(targetList);

	--目标是对面血最少的
	LuaDataAgt:RemoveNotMiniTarget(targetList, CURRENT_VALUE_TYPE.HP);

end


--技能生效，数值处理
local function takeEffect(LuaDataAgt)

	local targetList = LuaDataAgt:GetTargetList(TARGET_GROUP.ENEMY);

	targetList:get_Item(0):ChgHp(VALUE_TYPE.CURRENT, 0, LuaDataAgt, VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);

	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = 0;

	local StrAtk = rSource:GetStrAtk(VALUE_TYPE.CURRENT);
	local StrDef = rTarget:GetStrDef(VALUE_TYPE.CURRENT);
	local Base = rSource:GetActiveSkillBaseValue(1);
	local MinDmg = Base;
	local Ratio = rSource:GetActiveSkillRateValue(1);
		
	local hp = rTarget:GetHp(VALUE_TYPE.CURRENT);
	local hpTotal = rTarget:GetHp(VALUE_TYPE.RUNTIME_CONF);
	if hp / hpTotal >= 0.8 then
		iRet = Base + (StrAtk - StrDef) * Ratio;
	else
		iRet = 2 * ( Base + (StrAtk - StrDef) * Ratio );
	end
	
	iRet = math.max(iRet,MinDmg);
	
	return -iRet;
end

GeneralSkill_1 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;

	func_doFormula = doFormula;
}