--[[
名称：干戚之舞
类型：主动技能
描述：典韦摆出轮枪阵型，可以对所有方向的敌人造成枪击
--]]
local ThisScriptId = 10043;

--技能诞生处理
local function runBorn(LuaDataAgt)
	-- 设置公式
	LuaDataAgt:SetFormula(VALUE_CHG_TYPE.CHG_HP_GENERALSKILL, ThisScriptId, 0);
	
	local lifeTime = LuaDataAgt:GetActiveSkillAdditionValue(2);
	LuaDataAgt:SetShareValue(0, lifeTime);		-- 生命周期
	
	local damageCd = 1.5;
	LuaDataAgt:SetShareValue(1, damageCd);		-- 伤害CD
	
	LuaDataAgt:SetShareValue(2, 0.1);			-- 首次伤害	
end

--技能条件判断
local function checkCond(LuaDataAgt, AIId)
	--小地图技能目标提示标志
	LuaDataAgt:ClearAllSkillTarget();
	--没有技能框 清除其它技能框
	LuaDataAgt:ClearSkillRange();
	
	--当前位置判定，
	local pos = LuaDataAgt:GetCurPos();
	if pos.z < 10 or pos.z > 70 then 
	    return false;
	end
	
	--出城时间判定，出城后3秒内不允许放技能
	local passedTime = LuaDataAgt:GetOutCitySuccessTimePassed();
	if passedTime < 3 then
	    return false;
	end
	
	return true;
end

--找对象，上面条件满足后执行
local function findTarget(LuaDataAgt)
	--找之前先清一次
	LuaDataAgt:ClearTarget();
	
	--设置技能目标为自己，表示该技能有目标，生效会延迟
	local targetList = LuaDataAgt:FindTarget(TARGET_GROUP.NONE);
end

--技能生效，数值处理
local function takeEffect(LuaDataAgt)
	LuaDataAgt:InterruptSiege();
end

--技能公式
local function doFormula(LuaDataAgt, iFormulaType, iFormulaPara, rSource, rTarget, iDamageRef)
	local iRet = 0;
	local fStrAtk = rSource:GetStrAtk(VALUE_TYPE.CURRENT);
	local fStrDef = rTarget:GetStrDef(VALUE_TYPE.CURRENT);
	
	local fSpearDamageBase = rSource:GetActiveSkillAdditionValue(3);
	local fSpearDamageMin = 10;
	local fSpearDamageRatio = rSource:GetActiveSkillAdditionValue(4);
	local fCounterDamageMin = 10;	
	local fCounterDamageBase = fSpearDamageBase * 4.3;
	local fCounterDamageRatio = fSpearDamageRatio * 2;
	local fSpeed = rTarget:GetMoveSpeed(VALUE_TYPE.CURRENT);
	local fFaceCond = 5.5;
	local fFaceSpeedRatio = 1.2;
	
    if iDamageRef == 1 then
		--枪击
		iRet = math.max(((fSpearDamageBase + (fStrAtk - fStrDef) * fSpearDamageRatio)),fSpearDamageMin);
	end 
	
	if iDamageRef == 2 then
	   --迎击
	   iRet = math.max(((fCounterDamageBase + (fStrAtk - fStrDef) * fCounterDamageRatio)),fCounterDamageMin);
	end
	print ("damage="..iRet);
	
	return -iRet;
end


GeneralSkill_10043 = {
	func_runBorn = runBorn;
	func_checkCond = checkCond;
	func_findTarget = findTarget;
	func_takeEffect = takeEffect;
	func_doFormula = doFormula;
}